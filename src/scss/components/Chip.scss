@use "./Button.scss" as cb;
@use "../utils/colors.scss" as uc;
@use "../utils/has-action.scss" as uh;

// Chip
.chip {
  @include uh.has-action();
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 0.5rem;
  padding: 0 1rem;
  height: 2rem;
  font-size: var(--text-base);
  font-weight: var(--font-medium);
  font-family: var(--font-display);
  color: var(--on-surface-variant);
  background-color: var(--surface);
  border-radius: var(--rounded);
  border: 2px solid var(--outline);
  transition: border-color var(--animation-speed) var(--animation-timing);

  // State layer
  &::before {
    border-radius: var(--rounded);
  }

  // States
  &:focus {
    border: 2px solid var(--on-surface-variant);
    transition: border-color var(--animation-speed) var(--animation-timing);
  }

  &:hover::before {
    background-color: var(--on-surface-translucent-08);
  }

  &:focus::before,
  &:active::before {
    background-color: var(--on-surface-translucent-12);
  }

  &.selected {
    @extend .container-secondary;
    border: 2px solid var(--secondary-container);
    transition: box-shadow var(--animation-speed) var(--animation-timing);

    &:hover {
      box-shadow: var(--shadow-1);
    }

    &:active {
      transition: none;
      box-shadow: none;
    }

    .chip__icon {
      color: var(--on-secondary-container);
    }
  }

  &--has-icons {
    @extend .chip;
    padding: 0 0.5rem;
  }

  &--has-leading-icon {
    @extend .chip--has-icons;
    padding: 0 1rem 0 0.5rem;
  }

  &--has-trailing-icon {
    @extend .chip--has-icons;
    padding: 0 0.5rem 0 1rem;
  }

  &--has-avatar {
    @extend .chip--has-icons;
    padding: 0 0.75rem 0 0.25rem;
  }

  &--has-avatar-and-icon {
    @extend .chip--has-icons;
    padding: 0 0.5rem 0 0.25rem;
  }
}

.chip--elevated {
  @extend .chip;
  border: none;
  box-shadow: var(--shadow-1);

  &:focus {
    border: none;
  }
}

// Input Chip
.input-chip {
  @extend .chip;

  &:focus-within {
    border: 2px solid var(--on-surface);
    transition: border-color var(--animation-speed) var(--animation-timing);

    &::before {
      background-color: var(--on-surface-translucent-12);
    }
  }
}

// Button Chip
.btn-chip {
  @include uh.has-action("secondary");
  @extend .container-secondary;
  width: 2rem;
  height: 2rem;
  padding: 0.4375rem;
  border-radius: var(--rounded);
  border: none;
  transition: box-shadow var(--animation-speed) var(--animation-timing);

  // State layer
  &::before {
    border-radius: var(--rounded);
  }

  // States
  &:hover {
    box-shadow: var(--shadow-1);
  }

  &:active {
    transition: none;
    box-shadow: none;
  }

  // Components inside
  .chip__icon {
    color: var(--on-secondary-container);
  }

  // Modifiers
  &--filled {
    @extend .btn-chip;
    background-color: var(--primary);

    // State
    &:hover::before {
      background-color: var(--on-primary-translucent-08);
    }

    &:focus::before,
    &:active::before {
      background-color: var(--on-primary-translucent-12);
    }

    // Components inside
    .chip__icon {
      color: var(--on-primary);
    }
  }
}

// Components inside Chip

// Avatar
.chip__avatar {
  position: relative;
  height: 1.5rem;
  aspect-ratio: 1 / 1;
  border-radius: 9999px;
  overflow: hidden;

  * {
    width: 100%;
  }
}

// Icon (leading/trailing)
.chip__icon {
  display: flex;
  font-size: 1.125rem;
  color: var(--on-surface);
}

// Icon Button (inside Input Chip)
.chip__icon--btn {
  @extend .btn--text, .btn--icon;
  font-size: 1.125rem;
  color: var(--on-surface);

  &:hover::before {
    background-color: var(--on-surface-translucent-08);
  }

  &:focus::before,
  &:active::before {
    background-color: var(--on-surface-translucent-12);
  }
}
